---
description: 
globs: 
alwaysApply: false
---
When editing any Python files (`*.py`):

*   Strictly adhere to the `PEP 8` style guide, including naming conventions (functions and variables use `snake_case`, classes use `PascalCase`), indentation (4 spaces), line length (modern practice suggests 88 characters or less, although the `PEP 8` standard is 79), and organization of `imports` (separate standard library, third-party library, and local application `imports` with blank lines).
*   Use `f-strings` for string formatting whenever possible, as it is more readable and performs better than older methods (such as `%` or `.format()`).
*   Add `Type Hints` for all function signatures (parameters and return values) as well as key variables within the function body. This enhances code clarity and allows for static analysis.
*   Ensure all public modules, functions, classes, and methods have `Docstrings`. `Docstrings` should follow a standard format (such as Google style or `reStructuredText`), explaining their purpose, parameters (`Args:`), return values (`Returns:`), and possible exceptions (`Raises:`).
*   Avoid overly complex `list comprehensions` or nested logic; prioritize readability. If necessary, break down complex operations into smaller, well-named functions.
*   Ensure variable and function names are descriptive and clearly convey their purpose.